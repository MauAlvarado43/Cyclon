{"version":3,"file":"register.js","names":["router","Router","get","req","res","language","acceptsLanguages","assets","JSON","parse","fs","readFileSync","path","join","__dirname","user","redirect","render","title","titles","home","context","functions","decryptAES","query","v","u","email","User","find","docs","length","validateToken","session","tokenRecover","userRecover","recoverPassword","errors","TOKEN_INVALID","verify","updateOne","$set","err","raw","errorLog","error","update_info","sendEmail","name","lastName","type","json","geo","geoip","lookup","ip","ll","lat","encryptAES","lng","destroy","logout","post","allowChanges","password","decryptFront","body","userValidation","validateUser","newName","newApat","newEmail","register","decryptAndroid","push","field","actualEmail","checkWords","checkEmail","doc","send","module","exports"],"sources":["../../src/routes/register.js"],"sourcesContent":["import {Router} from 'express'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport { validateToken, decryptAES, decryptFront, encryptAES, decryptAndroid } from '../utils/cipher'\r\nimport {checkWords, checkEmail} from '../utils/regex'\r\nimport { UserModel as User } from '../models/UserModel'\r\nimport { errorLog } from '../utils/logger'\r\nimport { sendEmail } from '../utils/email'\r\nimport geoip from 'geoip-lite'\r\n\r\nconst router = Router()\r\n\r\n/***************************************\r\n                Rendering\r\n***************************************/\r\n\r\nrouter.get('/home', (req,res) => {\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en'\r\n\r\n    let assets = JSON.parse(fs.readFileSync(path.join(__dirname,'../assets/'+language+'.json'),'utf-8'))\r\n\r\n    if(!req.user)\r\n        res.redirect('/')\r\n    else\r\n        res.render('home', {\r\n            title: `Cyclon - ${assets.titles.home}`, \r\n            assets: assets,\r\n            context: req.user,\r\n            path: '/home',\r\n            functions: {\r\n                decryptAES\r\n            }\r\n        })\r\n})\r\n\r\nrouter.get('/recoverPassword', async (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en'\r\n\r\n    let assets = JSON.parse(fs.readFileSync(path.join(__dirname,'../assets/'+language+'.json'),'utf-8'))\r\n\r\n    if(req.query.v && req.query.u){\r\n\r\n        let email = decryptAES(req.query.u)\r\n        let docs = await User.find({email: email})\r\n\r\n        if(docs.length==1){\r\n            if(validateToken(req.query.v)){\r\n\r\n                req.session.tokenRecover = req.query.v\r\n                req.session.userRecover = email\r\n\r\n                res.render('recoverForm', {\r\n                    title: `Cyclon - ${assets.titles.recoverPassword}`,\r\n                    path: '/recoverPassword',\r\n                    assets: assets\r\n                })\r\n\r\n            }\r\n            else{\r\n                res.render('tokenExpired', {\r\n                    title: `Cyclon - ${assets.errors.TOKEN_INVALID}`, \r\n                    path: '/recoverPassword',\r\n                    assets: assets\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            res.redirect('/')\r\n        }\r\n\r\n    }\r\n    \r\n})\r\n\r\nrouter.get('/verified', (req,res) => {\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    let assets = JSON.parse(fs.readFileSync(path.join(__dirname,'../assets/'+language+'.json'),'utf-8'))\r\n        \r\n    res.render('accountVerified', {\r\n        title: `Cyclon - ${assets.titles.verify}`, \r\n        assets: assets,\r\n        context: req.user,\r\n        path: '/verified'\r\n    })\r\n})\r\n\r\nrouter.get('/verifyAccount', async (req,res) => {\r\n\r\n    if(req.query.v && req.query.u){\r\n\r\n        let email = decryptAES(req.query.u)\r\n        let docs = await User.find({email: email})\r\n\r\n        if(docs.length==1){\r\n            if(!docs[0].verify && validateToken(req.query.v)){\r\n                User.updateOne({email: email}, {$set: { verify: true } }, (err,raw) => {\r\n                    if(err) {\r\n                        errorLog.error(err)\r\n                        req.session.verify = true\r\n                        res.redirect('/')\r\n                    }\r\n                    else {\r\n                        res.redirect('/verified') \r\n                    }\r\n                })         \r\n            }\r\n            else{\r\n                res.redirect('/')\r\n            }\r\n        }\r\n        else{\r\n            res.redirect('/')\r\n        }\r\n\r\n    }\r\n    else{\r\n        res.redirect('/')\r\n    }\r\n\r\n})\r\n\r\nrouter.get('/update', (req,res) => {\r\n\r\n    if(!req.user){\r\n        res.redirect('/')\r\n    }\r\n    else{\r\n        let language = req.acceptsLanguages('es', 'en')\r\n        if (!language) language = 'en' \r\n\r\n        let assets = JSON.parse(fs.readFileSync(path.join(__dirname,'../assets/'+language+'.json'),'utf-8'))\r\n            \r\n        res.render('update', {\r\n            title: `Cyclon - ${assets.titles.update_info}`, \r\n            assets: assets,\r\n            context: req.user,\r\n            path: '/update',\r\n            functions: {\r\n                decryptAES\r\n            }\r\n        })\r\n    }\r\n\r\n})\r\n\r\n/***************************************\r\n                   API\r\n***************************************/\r\n\r\nrouter.get('/api/resendVerificationEmail', (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    sendEmail(decryptAES(req.user.email), 'verification', language, req.user.name + ' ' + req.user.lastName, req.user.type, req.user.email)\r\n    res.json({'code': 200, 'msg': 'RESENDED_VEMAIL' }) \r\n\r\n})\r\n\r\nrouter.get('/api/updateLocation', (req,res) => {\r\n\r\n    let geo = geoip.lookup(req.ip)\r\n\r\n    geo = {\r\n        ll: [19, -99]\r\n    }\r\n\r\n    User.updateOne({email: req.user.email}, {$set: { lat: encryptAES(geo[0]), lng: encryptAES(geo[1]) } }, (err,raw) => {\r\n        if(err) \r\n            res.json({'code': 401, 'msg': '500'})\r\n        else{\r\n            res.json({'code': 200, 'msg': 'UPDATED_LOCATION' }) \r\n            req.session.destroy()\r\n            req.logout()\r\n        }\r\n    }) \r\n\r\n})\r\n\r\nrouter.post('/api/updatePassword', (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    if(req.session.allowChanges){\r\n\r\n        let password = decryptFront(req.body.password)\r\n\r\n        const user = new User()\r\n        const userValidation = user.validateUser( req.user.name, req.user.lastName, decryptAES(req.user.email), password)\r\n\r\n        if(userValidation.length==0){\r\n            User.updateOne({email: req.user.email}, {$set: { password: encryptAES(password) } }, (err,raw) => {\r\n                if(err) \r\n                    res.json({'code': 401, 'msg': '500'})\r\n                else{\r\n                    res.json({'code': 201, 'msg': 'LOGIN_AGAIN' }) \r\n                    req.session.destroy()\r\n                    req.logout()\r\n                }\r\n            }) \r\n        }\r\n        else\r\n            res.json({'code': 401, 'msg': 'BAD_INPUT'})\r\n\r\n    }\r\n\r\n    req.session.allowChanges = false\r\n\r\n})\r\n\r\nrouter.post('/api/updateInfo', async (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    let newName = decryptFront(req.body.name)\r\n    let newApat = decryptFront(req.body.lastName)\r\n    let newEmail = decryptFront(req.body.email)\r\n\r\n    const user = new User()\r\n\r\n    const userValidation = user.validateUser( newName, newApat, newEmail, decryptAES(req.user.password))\r\n\r\n    if(req.session.allowChanges){\r\n\r\n        if(userValidation.length==0){\r\n\r\n            newEmail = encryptAES(newEmail)\r\n    \r\n            if(req.user.email == newEmail){\r\n                User.updateOne({email: req.user.email}, {$set: { lastName: newApat, name: newName } }, (err,raw) => {\r\n                    if(err) \r\n                        res.json({'code': 401, 'msg': '500'})\r\n                    else\r\n                        res.json({'code': 200, 'msg': 'UPDATE_SUCCESS' })\r\n                }) \r\n            }\r\n            else{\r\n                let docs = await User.find({ email: newEmail })\r\n    \r\n                if(docs.length==0){\r\n                    User.updateOne({email: req.user.email}, {$set: { verify: false, email: newEmail, lastName: newApat, name: newName } }, (err,raw) => {\r\n                        if(err) \r\n                            res.json({'code': 401, 'msg': '500'})                    \r\n                        else {\r\n                            sendEmail(decryptAES(newEmail), 'verification', language, newName + ' ' + newApat, req.user.type, newEmail)\r\n                            res.json({'code': 201, 'msg': 'LOGIN_AGAIN' }) \r\n                            req.session.destroy()\r\n                            req.logout()\r\n                        }\r\n                    }) \r\n                }\r\n                else\r\n                    res.json({'code': 401, 'msg': 'EMAIL_TAKEN'})\r\n            }    \r\n    \r\n        }\r\n        else\r\n            res.json({'code': 401, 'msg': 'BAD_INPUT'})\r\n    }\r\n    else if(req.user.register==1 || req.user.register==2){\r\n        User.updateOne({email: req.user.email}, {$set: { lastName: newApat, name: newName } }, (err,raw) => {\r\n            if(err) \r\n                res.json({'code': 401, 'msg': '500'})\r\n            else\r\n                res.json({'code': 200, 'msg': 'UPDATE_SUCCESS' })\r\n        }) \r\n    }\r\n\r\n    req.session.allowChanges = false\r\n\r\n})\r\n\r\nrouter.post('/api/verifyPassword', (req,res) => {\r\n    if(!req.user){\r\n        res.json({ 'code': 402, 'msg': '' })\r\n        req.session.allowChanges = false\r\n    }\r\n    else{\r\n        if(req.user.password != encryptAES(decryptFront(req.body.password))){\r\n            req.session.allowChanges = false\r\n            res.json({ 'code': 401, 'msg': 'INCORRECT_PASSWORD' })\r\n        }\r\n        else{\r\n            req.session.allowChanges = true\r\n            res.json({ 'code': 200, 'msg': '' })\r\n        }\r\n    }\r\n\r\n})\r\n\r\nrouter.post('/api/changePassword', (req,res) => {\r\n    \r\n    if(req.session.tokenRecover && req.session.userRecover){\r\n\r\n        let password = decryptFront(req.body.password)\r\n\r\n        const user = new User()\r\n        const userValidation = user.validateUser(\"rootroot\", \"rootroot\", decryptAES(req.session.userRecover), password)\r\n\r\n        if(userValidation.length==0){\r\n            User.updateOne({email: req.session.userRecover}, {$set: { password: encryptAES(password) } }, (err,raw) => {\r\n                if(err) \r\n                    res.json({'code': 401, 'msg': '500'})\r\n                else{\r\n                    res.json({'code': 201, 'msg': 'LOGIN_AGAIN' }) \r\n                    req.logout()\r\n                    req.session.destroy()\r\n                }\r\n            }) \r\n        }\r\n        else\r\n            res.json({'code': 401, 'msg': 'BAD_INPUT'})\r\n\r\n    }\r\n    \r\n})\r\n\r\nrouter.post('/api/requestRecoverPassword', async (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    let email = encryptAES(decryptFront(req.body.email))\r\n    let docs = await User.find({ email: encryptAES(decryptFront(req.body.email)) })\r\n\r\n    if(docs.length==0)\r\n        res.json({ 'code': 401, 'msg': 'USER_NOT_EXIST'})\r\n    else{\r\n        sendEmail(decryptAES(email), 'recover', language, docs[0].name + ' ' + docs[0].lastName, docs[0].type, email)\r\n        res.json({ 'code': 200, 'msg': 'recover_acepted'})\r\n    }\r\n\r\n})\r\n\r\nrouter.get('/api/upgradeUser', async (req,res) => {\r\n    User.updateOne({email: req.user.email, verify: true}, {$set: { type: 1 } }, (err,raw) => {\r\n        if(err) \r\n            res.json({'code': 401, 'msg': '500'})\r\n        else{\r\n            res.json({'code': 201, 'msg': 'LOGIN_AGAIN' }) \r\n            req.logout()\r\n            req.session.destroy()\r\n        }\r\n    })\r\n})\r\n\r\n/***************************************\r\n              Mobile API\r\n***************************************/\r\n\r\nrouter.post('/api/mobile/updateLocation', async (req,res) => {\r\n    User.updateOne({email: encryptAES(decryptAndroid(req.body.email)) }, {$set: { lat: encryptAES(decryptAndroid(req.body.lat)), lng : encryptAES(decryptAndroid(req.body.lng)) } }, (err,raw) => {\r\n        if(err) \r\n            res.json({'code': 401, 'msg': '500'})\r\n        else\r\n            res.json({'code': 200, 'msg': 'SUCCESS' }) \r\n    })\r\n})\r\n\r\nrouter.post('/api/mobile/updatePassword', async (req,res) => {\r\n\r\n    let errors = []\r\n    let password = decryptAndroid(req.body.password)\r\n\r\n    if(password.length<8) errors.push({field:'password', error: 'EMPTY_PASSWORD'})\r\n    if(password.length>50) errors.push({field:'password', error: 'MAX_PASSWORD'})\r\n\r\n    if(errors.length != 0)\r\n        res.json({'code': 401, 'msg': '500'})\r\n    else\r\n        User.updateOne({email: encryptAES(decryptAndroid(req.body.email)) }, {$set: { password: encryptAES(password) } }, (err,raw) => {\r\n            if(err) \r\n                res.json({'code': 401, 'msg': '500'})\r\n            else\r\n                res.json({'code': 200, 'msg': 'SUCCESS' }) \r\n        })\r\n        \r\n})\r\n\r\nrouter.post('/api/mobile/updateInfo', async (req,res) => {\r\n\r\n    let errors = []\r\n\r\n    let name = decryptAndroid(req.body.name)\r\n    let lastName = decryptAndroid(req.body.lastName)\r\n    let email = decryptAndroid(req.body.actualEmail)\r\n\r\n    if(!checkWords(name)) errors.push({field:'name', error: 'BAD_FORMAT'})\r\n    if(name.length<0) errors.push({field:'name', error: 'EMPTY_FORMAT'})\r\n    if(name.length>50) errors.push({field:'name', error: 'MAX_LENGTH'})\r\n\r\n    if(!checkWords(lastName)) errors.push({field:'lastName', error: 'ONLY_LETTERS_LASTNAME'})\r\n    if(lastName.length==0) errors.push({field:'lastName', error: 'EMPTY_LASTNAME'})\r\n    if(lastName.length>50) errors.push({field:'lastName', error: 'MAX_LASTNAME'})\r\n\r\n    if(!checkEmail(email)) errors.push({field:'email', error: 'BAD_FORMAT'})\r\n    if(email.length==0) errors.push({field:'email', error: 'EMPTY_FORMAT'})\r\n    if(email.length>50) errors.push({field:'email', error: 'MAX_LENGTH'})\r\n\r\n    if(errors.length != 0)\r\n        res.json({'code': 401, 'msg': '500'})\r\n    \r\n    else\r\n        User.updateOne({email: encryptAES(email) }, {$set: { name: name, lastName: lastName } }, (err,raw) => {\r\n            if(err) \r\n                res.json({'code': 401, 'msg': '500'})\r\n            else\r\n                res.json({'code': 200, 'msg': 'SUCCESS' }) \r\n        })\r\n\r\n})\r\n\r\nrouter.post('/api/mobile/updateAllInfo', async (req,res) => {\r\n\r\n    let language = req.acceptsLanguages('es', 'en')\r\n    if (!language) language = 'en' \r\n\r\n    let errors = []\r\n\r\n    let name = decryptAndroid(req.body.name)\r\n    let lastName = decryptAndroid(req.body.lastName)\r\n    let email = decryptAndroid(req.body.actualEmail)\r\n    let actualEmail = decryptAndroid(req.body.actualEmail)\r\n    let newEmail = decryptAndroid(req.body.email)\r\n\r\n    if(!checkWords(name)) errors.push({field:'name', error: 'BAD_FORMAT'})\r\n    if(name.length<0) errors.push({field:'name', error: 'EMPTY_FORMAT'})\r\n    if(name.length>50) errors.push({field:'name', error: 'MAX_LENGTH'})\r\n\r\n    if(!checkWords(lastName)) errors.push({field:'lastName', error: 'ONLY_LETTERS_LASTNAME'})\r\n    if(lastName.length==0) errors.push({field:'lastName', error: 'EMPTY_LASTNAME'})\r\n    if(lastName.length>50) errors.push({field:'lastName', error: 'MAX_LASTNAME'})\r\n\r\n    if(!checkEmail(email)) errors.push({field:'email', error: 'BAD_FORMAT'})\r\n    if(email.length==0) errors.push({field:'email', error: 'EMPTY_FORMAT'})\r\n    if(email.length>50) errors.push({field:'email', error: 'MAX_LENGTH'})\r\n\r\n    if(!checkEmail(actualEmail)) errors.push({field:'email', error: 'BAD_FORMAT'})\r\n    if(actualEmail.length==0) errors.push({field:'email', error: 'EMPTY_FORMAT'})\r\n    if(actualEmail.length>50) errors.push({field:'email', error: 'MAX_LENGTH'})\r\n\r\n    let doc = await User.find({email: encryptAES(actualEmail), verify: true })\r\n\r\n    if(doc.length == 0)\r\n        res.json({'code': 401, 'msg': '500'})\r\n    else if(errors.length != 0)\r\n        res.json({'code': 401, 'msg': '500'})\r\n    else\r\n        User.updateOne({email: encryptAES(actualEmail), verify: true }, {$set: { name: name, lastName: lastName, email: encryptAES(actualEmail), verify: false } }, (err,raw) => {\r\n            if(err) \r\n                res.json({'code': 401, 'msg': '500'})\r\n            else{\r\n                res.json({'code': 200, 'msg': 'SUCCESS' }) \r\n                sendEmail(newEmail, 'verification', language, name + ' ' + lastName, doc[0].type, encryptAES(newEmail))\r\n            }\r\n        })\r\n\r\n})\r\n\r\nrouter.post('/api/mobile/getUser', async (req,res) => {\r\n\r\n    let doc = await User.find({email: encryptAES(decryptAndroid(req.body.email))})\r\n    res.send(doc[0].name+\"/\"+doc[0].lastName)\r\n})\r\n\r\nmodule.exports = router"],"mappings":"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"}