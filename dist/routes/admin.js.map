{"version":3,"sources":["../../src/routes/admin.js"],"names":["module","exports","server","cyclonSocket","CyclonSocket","router","child","pythonRunning","get","req","res","process","env","PYTHON_ENV","path","join","__dirname","on","code","signal","console","log","setTimeout","connectPython","send","kill","disconnectPython"],"mappings":";;AAAA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,MAAD,EAAY;;AAEzB,QAAMC,eAAe,IAAIC,gBAAJ,CAAiBF,MAAjB,CAArB;AACA,QAAMG,SAAS,sBAAf;;AAEA,QAAIC,QAAQ,IAAZ;AACA,QAAIC,gBAAgB,KAApB;;AAEAF,WAAOG,GAAP,CAAW,gBAAX,EAA6B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACtC,YAAGJ,SAAS,IAAT,IAAiBC,iBAAiB,KAArC,EAA2C;;AAEvCD,oBAAS,0BAAMK,QAAQC,GAAR,CAAYC,UAAlB,EAA8B,CAACC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAD,CAA9B,CAAT;AACAT,4BAAgB,IAAhB;;AAEAD,kBAAMW,EAAN,CAAS,OAAT,EAAkB,UAACC,IAAD,EAAOC,MAAP,EAAkB;AAChCC,wBAAQC,GAAR,wDAAiEF,MAAjE;AACH,aAFD;;AAIAG,uBAAW,YAAM;AACbnB,6BAAaoB,aAAb;AACH,aAFD,EAEG,IAFH;;AAIAb,gBAAIc,IAAJ,CAAS,OAAT;AAEF,SAfF,MAgBI;AACAd,gBAAIc,IAAJ,CAAS,YAAT;AACH;AACJ,KApBD;;AAsBAnB,WAAOG,GAAP,CAAW,iBAAX,EAA8B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACvC,YAAGJ,SAAS,IAAT,IAAiBC,iBAAiB,IAArC,EAA0C;;AAEtCD,kBAAMmB,IAAN,CAAW,SAAX;AACAnB,oBAAS,IAAT;AACAC,4BAAgB,KAAhB;;AAEAJ,yBAAauB,gBAAb;;AAEAhB,gBAAIc,IAAJ,CAAS,MAAT;AACH,SATD,MAUI;AACAd,gBAAIc,IAAJ,CAAS,WAAT;AACH;AACJ,KAdD;;AAgBA,WAAOnB,MAAP;AAEH,CAhDD","file":"admin.js","sourcesContent":["import {Router} from 'express'\r\nimport { spawn } from 'child_process'\r\nimport CyclonSocket from '../config/socket'\r\nimport passport from 'passport'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n  \r\nmodule.exports = (server) => {\r\n\r\n    const cyclonSocket = new CyclonSocket(server)\r\n    const router = Router()\r\n\r\n    let child = null\r\n    let pythonRunning = false\r\n\r\n    router.get('/api/admin/run', (req,res) => {\r\n        if(child == null && pythonRunning == false){\r\n\r\n            child =  spawn(process.env.PYTHON_ENV, [path.join(__dirname, '../services/index.py')])\r\n            pythonRunning = true\r\n\r\n            child.on('close', (code, signal) => {\r\n                console.log(`child process terminated due to receipt of signal ${signal}`)\r\n            })\r\n\r\n            setTimeout(() => {\r\n                cyclonSocket.connectPython()\r\n            }, 5000)\r\n\r\n            res.send(\"START\")\r\n\r\n         }\r\n        else{\r\n            res.send(\"START'N :v\")\r\n        }\r\n    })\r\n\r\n    router.get('/api/admin/stop', (req,res) => {\r\n        if(child != null && pythonRunning == true){\r\n\r\n            child.kill('SIGTERM')\r\n            child =  null\r\n            pythonRunning = false\r\n\r\n            cyclonSocket.disconnectPython()\r\n\r\n            res.send(\"STOP\")\r\n        }\r\n        else{\r\n            res.send(\"STOP'N :v\")\r\n        }\r\n    })\r\n\r\n    return router\r\n\r\n}"]}