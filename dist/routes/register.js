"use strict";var _express=require("express");var _path=require("path");var _path2=_interopRequireDefault(_path);var _fs=require("fs");var _fs2=_interopRequireDefault(_fs);var _cipher=require("../utils/cipher");var _UserModel=require("../models/UserModel");var _logger=require("../utils/logger");var _email=require("../utils/email");var _geoipLite=require("geoip-lite");var _geoipLite2=_interopRequireDefault(_geoipLite);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step("next",value)},function(err){step("throw",err)})}}return step("next")})}}var router=(0,_express.Router)();router.get("/home",function(req,res){var language=req.acceptsLanguages("es","en");if(!language)language="en";var assets=JSON.parse(_fs2.default.readFileSync(_path2.default.join(__dirname,"../assets/"+language+".json"),"utf-8"));if(!req.user)res.redirect("/");else res.render("home",{title:"Cyclon - "+assets.titles.records,assets:assets,context:req.user,path:"/home",functions:{decryptAES:_cipher.decryptAES}})});router.get("/recoverPassword",function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(req,res){var language,assets,email,docs;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:language=req.acceptsLanguages("es","en");if(!language)language="en";assets=JSON.parse(_fs2.default.readFileSync(_path2.default.join(__dirname,"../assets/"+language+".json"),"utf-8"));if(!(req.query.v&&req.query.u)){_context.next=9;break}email=(0,_cipher.decryptAES)(req.query.u);_context.next=7;return _UserModel.UserModel.find({email:email});case 7:docs=_context.sent;if(docs.length==1){if((0,_cipher.validateToken)(req.query.v)){req.session.tokenRecover=req.query.v;req.session.userRecover=email;res.render("recoverForm",{title:"Cyclon - "+assets.titles.recoverPassword,path:"/recoverPassword",assets:assets})}else{res.render("tokenExpired",{title:"Cyclon - "+assets.errors.TOKEN_INVALID,path:"/recoverPassword",assets:assets})}}else{res.redirect("/")}case 9:case"end":return _context.stop()}}},_callee,undefined)}));return function(_x,_x2){return _ref.apply(this,arguments)}}());router.get("/verifyAccount",function(){var _ref2=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(req,res){var email,docs;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(req.query.v&&req.query.u)){_context2.next=8;break}email=(0,_cipher.decryptAES)(req.query.u);_context2.next=4;return _UserModel.UserModel.find({email:email});case 4:docs=_context2.sent;if(docs.length==1){if(!docs[0].verify&&(0,_cipher.validateToken)(req.query.v)){_UserModel.UserModel.updateOne({email:email},{$set:{verify:true}},function(err,raw){if(err){_logger.errorLog.error(err);req.session.verify=true;res.redirect("/")}else{res.redirect("/home")}})}else{res.redirect("/")}}else{res.redirect("/")}_context2.next=9;break;case 8:res.redirect("/");case 9:case"end":return _context2.stop()}}},_callee2,undefined)}));return function(_x3,_x4){return _ref2.apply(this,arguments)}}());router.get("/update",function(req,res){if(!req.user){res.redirect("/")}else{var language=req.acceptsLanguages("es","en");if(!language)language="en";var assets=JSON.parse(_fs2.default.readFileSync(_path2.default.join(__dirname,"../assets/"+language+".json"),"utf-8"));res.render("update",{title:"Cyclon - "+assets.titles.update_info,assets:assets,context:req.user,path:"/update",functions:{decryptAES:_cipher.decryptAES}})}});router.get("/api/resendVerificationEmail",function(req,res){var language=req.acceptsLanguages("es","en");if(!language)language="en";(0,_email.sendEmail)((0,_cipher.decryptAES)(req.user.email),"verification",language,req.user.name+" "+req.user.lastName,req.user.type,req.user.email);res.json({code:200,msg:"RESENDED_VEMAIL"})});router.get("/api/updateLocation",function(req,res){var geo=_geoipLite2.default.lookup(req.ip);geo={ll:[19,-99]};_UserModel.UserModel.updateOne({email:req.user.email},{$set:{lat:(0,_cipher.encryptAES)(geo[0]),lng:(0,_cipher.encryptAES)(geo[1])}},function(err,raw){if(err)res.json({code:401,msg:"500"});else{res.json({code:200,msg:"UPDATED_LOCATION"});req.session.destroy();req.logout()}})});router.post("/api/updatePassword",function(req,res){var language=req.acceptsLanguages("es","en");if(!language)language="en";if(req.session.allowChanges){var password=(0,_cipher.decryptFront)(req.body.password);var user=new _UserModel.UserModel;var userValidation=user.validateUser(req.user.name,req.user.lastName,(0,_cipher.decryptAES)(req.user.email),password);if(userValidation.length==0){_UserModel.UserModel.updateOne({email:req.user.email},{$set:{password:(0,_cipher.encryptAES)(password)}},function(err,raw){if(err)res.json({code:401,msg:"500"});else{res.json({code:201,msg:"LOGIN_AGAIN"});req.session.destroy();req.logout()}})}else res.json({code:401,msg:"BAD_INPUT"})}req.session.allowChanges=false});router.post("/api/updateInfo",function(){var _ref3=_asyncToGenerator(regeneratorRuntime.mark(function _callee3(req,res){var language,newName,newApat,newEmail,user,userValidation,docs;return regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:language=req.acceptsLanguages("es","en");if(!language)language="en";newName=(0,_cipher.decryptFront)(req.body.name);newApat=(0,_cipher.decryptFront)(req.body.lastName);newEmail=(0,_cipher.decryptFront)(req.body.email);user=new _UserModel.UserModel;userValidation=user.validateUser(newName,newApat,newEmail,(0,_cipher.decryptAES)(req.user.password));if(!req.session.allowChanges){_context3.next=21;break}if(!(userValidation.length==0)){_context3.next=20;break}newEmail=(0,_cipher.encryptAES)(newEmail);if(!(req.user.email==newEmail)){_context3.next=14;break}_UserModel.UserModel.updateOne({email:req.user.email},{$set:{lastName:newApat,name:newName}},function(err,raw){if(err)res.json({code:401,msg:"500"});else res.json({code:200,msg:"UPDATE_SUCCESS"})});_context3.next=18;break;case 14:_context3.next=16;return _UserModel.UserModel.find({email:newEmail});case 16:docs=_context3.sent;if(docs.length==0){_UserModel.UserModel.updateOne({email:req.user.email},{$set:{verify:false,email:newEmail,lastName:newApat,name:newName}},function(err,raw){if(err)res.json({code:401,msg:"500"});else{(0,_email.sendEmail)((0,_cipher.decryptAES)(newEmail),"verification",language,newName+" "+newApat,req.user.type,newEmail);res.json({code:201,msg:"LOGIN_AGAIN"});req.session.destroy();req.logout()}})}else res.json({code:401,msg:"EMAIL_TAKEN"});case 18:_context3.next=21;break;case 20:res.json({code:401,msg:"BAD_INPUT"});case 21:req.session.allowChanges=false;case 22:case"end":return _context3.stop()}}},_callee3,undefined)}));return function(_x5,_x6){return _ref3.apply(this,arguments)}}());router.post("/api/verifyPassword",function(req,res){if(!req.user){res.json({code:402,msg:""});req.session.allowChanges=false}else{if(req.user.password!=(0,_cipher.encryptAES)((0,_cipher.decryptFront)(req.body.password))){req.session.allowChanges=false;res.json({code:401,msg:"INCORRECT_PASSWORD"})}else{req.session.allowChanges=true;res.json({code:200,msg:""})}}});router.post("/api/changePassword",function(req,res){if(req.session.tokenRecover&&req.session.userRecover){var password=(0,_cipher.decryptFront)(req.body.password);var user=new _UserModel.UserModel;var userValidation=user.validateUser("rootroot","rootroot",(0,_cipher.decryptAES)(req.session.userRecover),password);if(userValidation.length==0){_UserModel.UserModel.updateOne({email:req.session.userRecover},{$set:{password:(0,_cipher.encryptAES)(password)}},function(err,raw){if(err)res.json({code:401,msg:"500"});else{res.json({code:201,msg:"LOGIN_AGAIN"});req.logout();req.session.destroy()}})}else res.json({code:401,msg:"BAD_INPUT"})}});router.post("/api/requestRecoverPassword",function(){var _ref4=_asyncToGenerator(regeneratorRuntime.mark(function _callee4(req,res){var language,email,docs;return regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:language=req.acceptsLanguages("es","en");if(!language)language="en";email=(0,_cipher.encryptAES)((0,_cipher.decryptFront)(req.body.email));_context4.next=5;return _UserModel.UserModel.find({email:(0,_cipher.encryptAES)((0,_cipher.decryptFront)(req.body.email))});case 5:docs=_context4.sent;if(docs.length==0)res.json({code:401,msg:"USER_NOT_EXIST"});else{(0,_email.sendEmail)((0,_cipher.decryptAES)(email),"recover",language,docs[0].name+" "+docs[0].lastName,docs[0].type,email);res.json({code:200,msg:"recover_acepted"})}case 7:case"end":return _context4.stop()}}},_callee4,undefined)}));return function(_x7,_x8){return _ref4.apply(this,arguments)}}());router.get("/api/upgradeUser",function(){var _ref5=_asyncToGenerator(regeneratorRuntime.mark(function _callee5(req,res){return regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_UserModel.UserModel.updateOne({email:req.user.email,verify:true},{$set:{type:1}},function(err,raw){if(err)res.json({code:401,msg:"500"});else{res.json({code:201,msg:"LOGIN_AGAIN"});req.logout();req.session.destroy()}});case 1:case"end":return _context5.stop()}}},_callee5,undefined)}));return function(_x9,_x10){return _ref5.apply(this,arguments)}}());module.exports=router;