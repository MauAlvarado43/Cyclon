{"version":3,"sources":["../../src/utils/email.js"],"names":["sendEmail","destiny","topic","language","name","level","_id","assets","JSON","parse","fs","readFileSync","path","join","__dirname","transporter","nodemailer","createTransport","service","host","port","secure","auth","user","pass","tls","rejectUnauthorized","mailOptions","from","to","subject","html","getHTML","attachments","filename","cid","sendMail","err","info","console","log","errorLog","error","replace","verification","text","split","process","env","URL","recover"],"mappings":"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","file":"email.js","sourcesContent":["import nodemailer from 'nodemailer'\r\nimport { errorLog } from './logger'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport { generateToken, encryptAES } from './cipher'\r\n\r\nconst sendEmail = (destiny, topic, language, name, level, _id) => {\r\n\r\n    try{\r\n\r\n        let assets = (JSON.parse(fs.readFileSync(path.join(__dirname,'../assets/emails.json'),'utf-8')))\r\n\r\n        let transporter = nodemailer.createTransport({\r\n            service: 'Gmail',\r\n            host: 'smtp.gmail.com',\r\n            port: 465,\r\n            secure: true,\r\n            auth: {\r\n                user: 'hypersoftcode@gmail.com',\r\n                pass: 'a3*/dac34&ew3$'\r\n            },\r\n            tls: {\r\n                rejectUnauthorized: false\r\n            }\r\n        })\r\n        \r\n        let mailOptions = {\r\n            from: 'hypersoftcode@gmail.com',\r\n            to: destiny,\r\n            subject: assets[language][topic].subject,\r\n            html: getHTML(topic, assets, name, level, language, _id),\r\n            attachments: \r\n            [\r\n                {\r\n                filename: 'CyclonHeader.png',\r\n                path: 'src/public/images/CyclonHeader.png',\r\n                cid: 'logo'\r\n                },\r\n                {\r\n                    filename: 'app-store-us.png',\r\n                    path: 'src/public/images/app-store-us.png',\r\n                    cid: 'appstore'\r\n                },\r\n                {\r\n                    filename: 'google-play-us.png',\r\n                    path: 'src/public/images/google-play-us.png',\r\n                    cid: 'googleplay'\r\n                },\r\n                {\r\n                    filename: 'twitter2x.png',\r\n                    path: 'src/public/images/twitter2x.png',\r\n                    cid: 'twitter'\r\n                },\r\n                {\r\n                    filename: 'facebook2x.png',\r\n                    path: 'src/public/images/facebook2x.png',\r\n                    cid: 'facebook'\r\n                },\r\n\r\n            ]\r\n        }\r\n\r\n        if (language == 'es'){\r\n            mailOptions.attachments[1] = {\r\n                filename: 'app-store-es.png',\r\n                path: 'src/public/images/app-store-es.png',\r\n                cid: 'appstore'\r\n            }\r\n            mailOptions.attachments[2] = {\r\n                filename: 'google-play-es.png',\r\n                path: 'src/public/images/google-play-es.png',\r\n                cid: 'googleplay'\r\n            }\r\n        }\r\n\r\n        transporter.sendMail(mailOptions, function(err, info){\r\n            if (err){\r\n                console.log(err)\r\n            }\r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n        errorLog.error(err)\r\n    }\r\n\r\n}\r\n\r\nconst getHTML = (topic, assets, name, level, language, _id) => {\r\n\r\n    if (topic == 'verification'){\r\n        let html = fs.readFileSync(path.join(__dirname,'./templates/verification.html'),'utf-8')\r\n        .replace('$(0)', name)\r\n        .replace('$(1)',assets[language].verification.text[0])\r\n        .replace('$(2)',assets[language].level[level])\r\n        .replace('$(3)',assets[language].verification.text[1])\r\n        .replace('$(4)', name.split(' ')[0] + ' !')\r\n        .replace('$(5)',assets[language].verification.text[2])\r\n        .replace('$(6)',assets[language].verification.text[3])\r\n        .replace('$(7)',assets[language].verification.text[4])\r\n        .replace('$(8)',assets[language].verification.text[5])\r\n        .replace('$(9)',assets[language].verification.text[6])\r\n        .replace('$(10',assets[language].verification.text[7])\r\n        .replace('$(11)',assets[language].verification.text[8])\r\n        .replace('$(link)', 'href=\\\"'+ process.env.URL + '/verifyAccount?v='+generateToken((60 * 60 * 24 * 365))+'&u='+encryptAES(_id)+'\\\"')\r\n        return html\r\n    }\r\n    else if(topic == 'recover'){\r\n        let html = fs.readFileSync(path.join(__dirname,'./templates/verification.html'),'utf-8')\r\n        .replace('$(0)', name)\r\n        .replace('$(1)',assets[language].recover.text[0])\r\n        .replace('$(2)',assets[language].level[level])\r\n        .replace('$(3)',assets[language].recover.text[1])\r\n        .replace('$(4)', name.split(' ')[0] + ' !')\r\n        .replace('$(5)',assets[language].recover.text[2])\r\n        .replace('$(6)',assets[language].recover.text[3])\r\n        .replace('$(7)',assets[language].recover.text[4])\r\n        .replace('$(8)',assets[language].recover.text[5])\r\n        .replace('$(9)',assets[language].recover.text[6])\r\n        .replace('$(10',assets[language].recover.text[7])\r\n        .replace('$(11)',assets[language].recover.text[8])\r\n        .replace('$(link)', 'href=\\\"'+ process.env.URL + '/recoverPassword?v='+generateToken((60 * 60 * 24))+'&u='+encryptAES(_id)+'\\\"')\r\n        return html\r\n    }\r\n\r\n}\r\n\r\nexport { sendEmail }"]}