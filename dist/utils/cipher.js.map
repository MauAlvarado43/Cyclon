{"version":3,"sources":["../../src/utils/cipher.js"],"names":["algorithm","passwordAES","IV","encryptFront","global","navigator","appName","window","JSEncrypt","require","default","cipher","setPublicKey","publicKeyServer","encrypt","plainText","err","decryptFront","setPrivateKey","privateKeyServer","decrypt","cryptedText","toString","encryptAES","crypto","createCipheriv","encrypted","update","final","decryptAES","decipher","createDecipheriv","decrypted"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,YAAY,aAAlB;AACA,IAAMC,cAAc,kCAApB;AACA,IAAMC,KAAK,kBAAX;;AAEA,IAAMC,eAAe,SAAfA,YAAe,YAAa;AAC9B,QAAG;;AAECC,eAAOC,SAAP,GAAmB,EAACC,SAAS,QAAV,EAAnB;AACAF,eAAOG,MAAP,GAAgB,EAAhB;AACA,YAAMC,YAAYC,QAAS,aAAT,EAAwBC,OAA1C;;AAEA,YAAMC,SAAS,IAAIH,SAAJ,EAAf;AACAG,eAAOC,YAAP,CAAoBC,eAApB;AACA,eAAOF,OAAOG,OAAP,CAAeC,SAAf,CAAP;AAEH,KAVD,CAUC,OAAMC,GAAN,EAAU;AACP,eAAO,IAAP;AACH;AACJ,CAdD;;AAgBA,IAAMC,eAAe,SAAfA,YAAe,cAAe;AAChC,QAAG;;AAECb,eAAOC,SAAP,GAAmB,EAACC,SAAS,QAAV,EAAnB;AACAF,eAAOG,MAAP,GAAgB,EAAhB;AACA,YAAMC,YAAYC,QAAS,aAAT,EAAwBC,OAA1C;;AAEA,YAAMC,SAAS,IAAIH,SAAJ,EAAf;AACAG,eAAOO,aAAP,CAAqBC,gBAArB;AACA,eAAOR,OAAOS,OAAP,CAAeC,WAAf,EAA4BC,QAA5B,CAAqC,MAArC,CAAP;AAEH,KAVD,CAUC,OAAMN,GAAN,EAAU;AACP,eAAO,IAAP;AACH;AACJ,CAdD;;AAgBA,IAAMO,aAAa,SAAbA,UAAa,YAAa;AAC5B,QAAG;;AAEC,YAAIZ,SAASa,iBAAOC,cAAP,CAAsBzB,SAAtB,EAAiCC,WAAjC,EAA8CC,EAA9C,CAAb;AACA,YAAIwB,YAAYf,OAAOgB,MAAP,CAAcZ,SAAd,EAAyB,MAAzB,EAAiC,QAAjC,CAAhB;AACAW,qBAAaf,OAAOiB,KAAP,CAAa,QAAb,CAAb;AACA,eAAOF,SAAP;AAEH,KAPD,CAOC,OAAMV,GAAN,EAAU;AACP,eAAO,IAAP;AACH;AACJ,CAXD;;AAaA,IAAMa,aAAa,SAAbA,UAAa,cAAe;AAC9B,QAAG;;AAEC,YAAIC,WAAWN,iBAAOO,gBAAP,CAAwB/B,SAAxB,EAAmCC,WAAnC,EAAgDC,EAAhD,CAAf;AACA,YAAI8B,YAAYF,SAASH,MAAT,CAAgBN,WAAhB,EAA6B,QAA7B,EAAuC,MAAvC,CAAhB;AACA,eAAQW,YAAYF,SAASF,KAAT,CAAe,MAAf,CAApB;AAEH,KAND,CAMC,OAAMZ,GAAN,EAAU;AACP,eAAO,IAAP;AACH;AACJ,CAVD;;QAYQb,Y,GAAAA,Y;QAAcc,Y,GAAAA,Y;QAAcM,U,GAAAA,U;QAAYM,U,GAAAA,U;;;AAEhD,IAAMhB,8dAAN;;AAUA,IAAMM,6rDAAN","file":"cipher.js","sourcesContent":["import crypto from 'crypto'\r\n\r\nconst algorithm = 'aes-256-cbc';\r\nconst passwordAES = 'TStrzyg!zGXNvKyK3xkQW#6arP{q6AcL';\r\nconst IV = \"5183666c72eec9e4\";\r\n\r\nconst encryptFront = plainText => {\r\n    try{\r\n\r\n        global.navigator = {appName: 'nodejs'};\r\n        global.window = {};\r\n        const JSEncrypt = require ('./JSEncrypt').default;\r\n\r\n        const cipher = new JSEncrypt ();\r\n        cipher.setPublicKey(publicKeyServer);\r\n        return cipher.encrypt(plainText);\r\n\r\n    }catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nconst decryptFront = cryptedText => {\r\n    try{\r\n\r\n        global.navigator = {appName: 'nodejs'};\r\n        global.window = {};\r\n        const JSEncrypt = require ('./JSEncrypt').default;\r\n\r\n        const cipher = new JSEncrypt ();\r\n        cipher.setPrivateKey(privateKeyServer);\r\n        return cipher.decrypt(cryptedText).toString(\"utf8\");\r\n\r\n    }catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nconst encryptAES = plainText => {\r\n    try{\r\n\r\n        let cipher = crypto.createCipheriv(algorithm, passwordAES, IV);\r\n        let encrypted = cipher.update(plainText, 'utf8', 'base64');\r\n        encrypted += cipher.final('base64');\r\n        return encrypted;\r\n\r\n    }catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nconst decryptAES = cryptedText => {\r\n    try{\r\n\r\n        let decipher = crypto.createDecipheriv(algorithm, passwordAES, IV);\r\n        let decrypted = decipher.update(cryptedText, 'base64', 'utf8');\r\n        return (decrypted + decipher.final('utf8'));\r\n\r\n    }catch(err){\r\n        return null \r\n    }\r\n}\r\n\r\nexport {encryptFront, decryptFront, encryptAES, decryptAES}\r\n\r\nconst publicKeyServer = `-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0TlmjdegY60EXB2y5IR/\r\nVsAbIlIkWy6+buF3KJAm9Hv+MEasOhqPPpCEOk4e3cv9wm1H2USNm+STEgFelEn7\r\nlEe1oldrkTfrC/2SqoLxHPFKai86ni5BuIXJ8wuhXNA8crCIFvsGZTzZjUyjzq9T\r\nby/muPD3Er8RbPs7eagJPvqoYCiilREl2u2MHhs38n6g9UGDrPQPNcyZ2fS2+1dG\r\n2gVRILlNBtaLpf1ULPH4M6wSUrDXDaK2Jqn8rU4mw2SaMKY2MnBzStxe7PP8IEnM\r\nqk8RCV1+D8STephfMKadTBNqft58Tjye5lEGBu2sINd8ro52A4hAnaWQd1bDoYPK\r\nLQIDAQAB\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst privateKeyServer = `-----BEGIN RSA PRIVATE KEY-----\r\nMIIEpQIBAAKCAQEAxpQPpHiKrzzWdrbgQy/EYcC6kAnDgTyuc7mGWCM6765HLEpH\r\n5XCwD8IS11YTnTNqgUHoykphmgUOWGcHv39z5FysttLY5x+A+X+hgaM+Tk4I4qLh\r\nwp/pCzaGe9zz2DYukU3Ei/eIx+U0DpT4Gv6HlAhAmheqA9eGtIocLz0cMW9EY4pI\r\nzxsN4xrVm7Sd9u2/88UgZ54sef1gDXSpVYN01+L8/N1g4XB3PQ7My1CxB8fOUp5I\r\n/LpSJwlnfaOqf+unmnyNou4PfAG5lWzy5lFP2cV0KQtscxTE0vRv5PFPOQsH3Ii9\r\nLD6tFH+34Qrz85ncwD/U84RnvRKT8BEM4Xjy2QIDAQABAoIBAQCcETO2DLLahNL9\r\nHD9nLnyGY0V8/N91i+6DrzTBwnaIdw0i5wJYddc5m0rZiKIDs6wqCFXf3tOUjBK5\r\nMchqHc5ElP189ntYMm9YJ5IUY+sM+dGL5X3PS4SJtoG9iWrv661vr5Igexw6Fo5y\r\nQ2w3MwH1OwMi2CRbvqD09XKvQbUNt8QlNYTZZpsDg5Q2sRmjcVr6Y7Z99DMvBGwF\r\nd2KK5PcznG0fN0D7cg8tDBu3G+P3IVBmAkKXKF5DboTgASDVILcF7AnFsTtZ6XRP\r\nFKotyCXhZR3roYZY7Knkrt18udMAV72v4rMjK9PkprhxyLmByYSkLGAjdC1Vubvc\r\n1HuS/XmtAoGBAPfgxgkZxJ95mu/OSPfRTw2j2BPQBvXY3c2JM0cVTXrQmIm17FuI\r\nkIQwUmuiKQLRHEA0dLSUC/WnMIgorC83RdjQnu+/gqafoJnvj1FbmxzHn/2dZOi+\r\nYeedGM4l1Pvt9nyo1+vWhgq5EMkbpGVmTSO4bfZHT4Ih6TVaxuo5DibLAoGBAM0V\r\nwcS4oCmBMxRjAcrGTS2fxM5bY2DmXDLYiHUkIvrnxEayOzXF9ymAsbMjXJkM46ax\r\nn/tVrN5AnMa0+dz086kDCZ6TWYL/mB4mM4yvRp2BRmdq3+9uw1JDBS1G5RkOf/HS\r\nzgCqrAoWeUe5pnUNYvUSc3MMgfNwSxWZFIPO2LRrAoGBAIEQ3IyoiiSvYOk0c/H1\r\nXkAv67aFPtqLzRHUOorsoKcuLf6mZydR+E2cC45XpRr+XsNfjNTpsUB7iV2cL+t1\r\n0DyQg/E5uoGf5DPC9NDb7ewSVU/swDofx0KeHehY8okq4okOMT9vN+QlcIQGjJbv\r\nqYLL6RWvE8sidRd+6MvUYXX5AoGBALswQp52DeoUPTU8cSRN/5/HFnFrxLdrS3g1\r\nX8fb5fmxldsZTyXzvXcqOgfSHPCtbRR3SBi1yIVL4E0WXoGpKsV3Ok59G9SPyp6q\r\nK58bVI7qsgIu8JqwNKNe/Niovu8x5uIokVLWdRT4Ela/QwnP4CTkZG/8WJiERGRA\r\nRxNPt0hlAoGAdX11NW6fhNomRPJGtkFD4oY/vWdMgaokoYR8L+RgFXAH8eX4S9EA\r\nzPnX95EowZTsFdnMZLbiwHgLA77UsVBwhnc/8PGC0TTfT4usdLhyAYVY9RQ6SRSE\r\nc1jdNZYeM6v6ddFuUZ+qHP0VFu7CsJiOoKhYIInTD7IT4gM2vIlSPxw=\r\n-----END RSA PRIVATE KEY-----`;"]}