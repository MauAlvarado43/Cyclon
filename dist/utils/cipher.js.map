{"version":3,"file":"cipher.js","names":["algorithm","passwordAES","IV","_key","_iv","encryptAndroid","plainText","key","CryptoJS","enc","Base64","parse","iv","AES","encrypt","trim","toString","decryptAndroid","cryptedText","decrypt","Utf8","encryptFromFront","global","navigator","appName","window","JSEncrypt","require","cipher","setPublicKey","publicKeyuser","err","errorLog","error","encryptFront","publicKeyServer","decryptFront","setPrivateKey","privateKeyServer","encryptAES","crypto","createCipheriv","encrypted","update","decryptAES","decipher","createDecipheriv","decrypted","generateToken","duration","tokenGenerator","sign","foo","randomBytes","iat","Math","floor","Date","now","validateToken","token","decode","privateKeyUser"],"sources":["../../src/utils/cipher.js"],"sourcesContent":["import crypto from 'crypto'\r\nimport * as CryptoJS from 'crypto-js'\r\nimport { errorLog } from './logger'\r\nimport tokenGenerator from 'jsonwebtoken'\r\n\r\nconst algorithm = 'aes-256-cbc'\r\nconst passwordAES = 'TStrzyg!zGXNvKyK3xkQW#6arP{q6AcL'\r\nconst IV = '5183666c72eec9e4'\r\n\r\nconst _key = 'Y01JNiM0cFRhXmFBN0gwaVFsazlmJG8kckw0Xmk2d2Q='\r\nconst _iv = 'AcynMwikMkW4c7+mHtwtfw=='\r\n\r\nconst encryptAndroid = plainText => {\r\n    let key = CryptoJS.enc.Base64.parse(_key)\r\n    let iv = CryptoJS.enc.Base64.parse(_iv)\r\n    return CryptoJS.AES.encrypt(plainText.trim(),key,{ iv: iv }).toString()\r\n}\r\n\r\nconst decryptAndroid = cryptedText => {\r\n    let key = CryptoJS.enc.Base64.parse(_key)\r\n    let iv = CryptoJS.enc.Base64.parse(_iv)\r\n    return CryptoJS.AES.decrypt(cryptedText, key,{ iv: iv }).toString(CryptoJS.enc.Utf8)\r\n}\r\n\r\nconst encryptFromFront = plainText => {\r\n    try{\r\n\r\n        global.navigator = {appName: 'nodejs'}\r\n        global.window = {}\r\n        const JSEncrypt = require ('./JSEncrypt').default\r\n\r\n        const cipher = new JSEncrypt ()\r\n        cipher.setPublicKey(publicKeyuser)\r\n        return cipher.encrypt(plainText)\r\n\r\n    }catch(err){\r\n        if(err) errorLog.error(err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst encryptFront = plainText => {\r\n    try{\r\n\r\n        global.navigator = {appName: 'nodejs'}\r\n        global.window = {}\r\n        const JSEncrypt = require ('./JSEncrypt').default\r\n\r\n        const cipher = new JSEncrypt ()\r\n        cipher.setPublicKey(publicKeyServer)\r\n        return cipher.encrypt(plainText)\r\n\r\n    }catch(err){\r\n        if(err) errorLog.error(err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst decryptFront = cryptedText => {\r\n    try{\r\n\r\n        global.navigator = {appName: 'nodejs'}\r\n        global.window = {}\r\n        const JSEncrypt = require ('./JSEncrypt').default\r\n\r\n        const cipher = new JSEncrypt ()\r\n        cipher.setPrivateKey(privateKeyServer)\r\n        return cipher.decrypt(cryptedText).toString('utf8')\r\n\r\n    }catch(err){\r\n        if(err) errorLog.error(err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst encryptAES = plainText => {\r\n    try{\r\n\r\n        let cipher = crypto.createCipheriv(algorithm, passwordAES, IV)\r\n        let encrypted = cipher.update(plainText, 'utf8', 'base64')\r\n        encrypted += cipher.final('base64')\r\n        return encrypted\r\n\r\n    }catch(err){\r\n        if(err) errorLog.error(err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst decryptAES = cryptedText => {\r\n    try{\r\n\r\n        let decipher = crypto.createDecipheriv(algorithm, passwordAES, IV)\r\n        let decrypted = decipher.update(cryptedText, 'base64', 'utf8')\r\n        return (decrypted + decipher.final('utf8'))\r\n\r\n    }catch(err){\r\n        if(err) errorLog.error(err)\r\n        return null \r\n    }\r\n}\r\n\r\nconst generateToken = (duration) => ( tokenGenerator.sign({ foo: crypto.randomBytes , iat: Math.floor(Date.now() / 1000) + duration}, '=L;aSx&MuAYeb.8x') )\r\nconst validateToken = token => ( tokenGenerator.decode(token, '=L;aSx&MuAYeb.8x', (err, decode) => (decode)) )\r\n\r\nexport { encryptFront, decryptFront, encryptAES, decryptAES, encryptAndroid, decryptAndroid, generateToken, validateToken, encryptFromFront }\r\n\r\nconst publicKeyServer = `-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0TlmjdegY60EXB2y5IR/\r\nVsAbIlIkWy6+buF3KJAm9Hv+MEasOhqPPpCEOk4e3cv9wm1H2USNm+STEgFelEn7\r\nlEe1oldrkTfrC/2SqoLxHPFKai86ni5BuIXJ8wuhXNA8crCIFvsGZTzZjUyjzq9T\r\nby/muPD3Er8RbPs7eagJPvqoYCiilREl2u2MHhs38n6g9UGDrPQPNcyZ2fS2+1dG\r\n2gVRILlNBtaLpf1ULPH4M6wSUrDXDaK2Jqn8rU4mw2SaMKY2MnBzStxe7PP8IEnM\r\nqk8RCV1+D8STephfMKadTBNqft58Tjye5lEGBu2sINd8ro52A4hAnaWQd1bDoYPK\r\nLQIDAQAB\r\n-----END PUBLIC KEY-----`\r\n\r\nconst privateKeyServer = `-----BEGIN RSA PRIVATE KEY-----\r\nMIIEpQIBAAKCAQEAxpQPpHiKrzzWdrbgQy/EYcC6kAnDgTyuc7mGWCM6765HLEpH\r\n5XCwD8IS11YTnTNqgUHoykphmgUOWGcHv39z5FysttLY5x+A+X+hgaM+Tk4I4qLh\r\nwp/pCzaGe9zz2DYukU3Ei/eIx+U0DpT4Gv6HlAhAmheqA9eGtIocLz0cMW9EY4pI\r\nzxsN4xrVm7Sd9u2/88UgZ54sef1gDXSpVYN01+L8/N1g4XB3PQ7My1CxB8fOUp5I\r\n/LpSJwlnfaOqf+unmnyNou4PfAG5lWzy5lFP2cV0KQtscxTE0vRv5PFPOQsH3Ii9\r\nLD6tFH+34Qrz85ncwD/U84RnvRKT8BEM4Xjy2QIDAQABAoIBAQCcETO2DLLahNL9\r\nHD9nLnyGY0V8/N91i+6DrzTBwnaIdw0i5wJYddc5m0rZiKIDs6wqCFXf3tOUjBK5\r\nMchqHc5ElP189ntYMm9YJ5IUY+sM+dGL5X3PS4SJtoG9iWrv661vr5Igexw6Fo5y\r\nQ2w3MwH1OwMi2CRbvqD09XKvQbUNt8QlNYTZZpsDg5Q2sRmjcVr6Y7Z99DMvBGwF\r\nd2KK5PcznG0fN0D7cg8tDBu3G+P3IVBmAkKXKF5DboTgASDVILcF7AnFsTtZ6XRP\r\nFKotyCXhZR3roYZY7Knkrt18udMAV72v4rMjK9PkprhxyLmByYSkLGAjdC1Vubvc\r\n1HuS/XmtAoGBAPfgxgkZxJ95mu/OSPfRTw2j2BPQBvXY3c2JM0cVTXrQmIm17FuI\r\nkIQwUmuiKQLRHEA0dLSUC/WnMIgorC83RdjQnu+/gqafoJnvj1FbmxzHn/2dZOi+\r\nYeedGM4l1Pvt9nyo1+vWhgq5EMkbpGVmTSO4bfZHT4Ih6TVaxuo5DibLAoGBAM0V\r\nwcS4oCmBMxRjAcrGTS2fxM5bY2DmXDLYiHUkIvrnxEayOzXF9ymAsbMjXJkM46ax\r\nn/tVrN5AnMa0+dz086kDCZ6TWYL/mB4mM4yvRp2BRmdq3+9uw1JDBS1G5RkOf/HS\r\nzgCqrAoWeUe5pnUNYvUSc3MMgfNwSxWZFIPO2LRrAoGBAIEQ3IyoiiSvYOk0c/H1\r\nXkAv67aFPtqLzRHUOorsoKcuLf6mZydR+E2cC45XpRr+XsNfjNTpsUB7iV2cL+t1\r\n0DyQg/E5uoGf5DPC9NDb7ewSVU/swDofx0KeHehY8okq4okOMT9vN+QlcIQGjJbv\r\nqYLL6RWvE8sidRd+6MvUYXX5AoGBALswQp52DeoUPTU8cSRN/5/HFnFrxLdrS3g1\r\nX8fb5fmxldsZTyXzvXcqOgfSHPCtbRR3SBi1yIVL4E0WXoGpKsV3Ok59G9SPyp6q\r\nK58bVI7qsgIu8JqwNKNe/Niovu8x5uIokVLWdRT4Ela/QwnP4CTkZG/8WJiERGRA\r\nRxNPt0hlAoGAdX11NW6fhNomRPJGtkFD4oY/vWdMgaokoYR8L+RgFXAH8eX4S9EA\r\nzPnX95EowZTsFdnMZLbiwHgLA77UsVBwhnc/8PGC0TTfT4usdLhyAYVY9RQ6SRSE\r\nc1jdNZYeM6v6ddFuUZ+qHP0VFu7CsJiOoKhYIInTD7IT4gM2vIlSPxw=\r\n-----END RSA PRIVATE KEY-----`\r\n\r\nconst privateKeyUser = `-----BEGIN RSA PRIVATE KEY-----\r\nMIIEowIBAAKCAQEA0TlmjdegY60EXB2y5IR/VsAbIlIkWy6+buF3KJAm9Hv+MEas\r\nOhqPPpCEOk4e3cv9wm1H2USNm+STEgFelEn7lEe1oldrkTfrC/2SqoLxHPFKai86\r\nni5BuIXJ8wuhXNA8crCIFvsGZTzZjUyjzq9Tby/muPD3Er8RbPs7eagJPvqoYCii\r\nlREl2u2MHhs38n6g9UGDrPQPNcyZ2fS2+1dG2gVRILlNBtaLpf1ULPH4M6wSUrDX\r\nDaK2Jqn8rU4mw2SaMKY2MnBzStxe7PP8IEnMqk8RCV1+D8STephfMKadTBNqft58\r\nTjye5lEGBu2sINd8ro52A4hAnaWQd1bDoYPKLQIDAQABAoIBAB0eUQCSrvbQYJf1\r\nZi1Zp2NKbzxSlE7Aba5+4JeboGBMVW8glt2rTp5VfKGkt7UEq/eAQAyj9tVodXN/\r\nD0uyFDpp1ISYiBb44lST4PKsMKRnjITEt/LF2020CQwzZSzGqnMH0JjqLNSwKFL7\r\nBJ1CV2lVEFZS6wAH6YPyXy+qTEcgWRXF45w87KMy4AgI1bTno+YITkg6x+uHrCuq\r\ntIwG3paiC1GB6WY30N95OoAkva6CvEVgb1LK0V4BluPIE5P8nkRZOyUOGTtE4YxX\r\noaB7ciyALzPBG0FxO7AxjLupLL7EppTC9Z99k+ewV8aCV82q/P1X84emWwjXyL5r\r\nGInAMWECgYEA7oLX+aOSqjzxFrsROOLj+ENb2fEcYYLGHJ2xJEzth2FxzsNMy6hI\r\nYooJXfJwG0B1V7cq9bGvreyg7InsIqkLSk6yWlI3W+yeUb51cxQ5MgNunJIB0VH7\r\nFN8vA7yYaSjIXUMLGqWKeQRUkSwqE03rMx7CnvFTlHVizUi0m+k7M9UCgYEA4JDO\r\nDY9w0VSh6FoscSII0+1r9Iutdh4kDWDlHwY5LLGszI8RbiPG2oNgnDwoDaOwIBEh\r\n4rpkI1guQT7G/ck6vWbAidPlDOOHpgddG7j79NU7yyrPerXbwzgafaIWjmc7hVI8\r\ndDLdVQcrCOmi49jSq/SkmxpZMlcqfvkyuuFE4PkCgYAKhXUXixKuNdAAy7G/y6p4\r\nyifkHlG9L3Kj0oT87/POdAr8LvtVRJAk4Kf3H/m4CgjjHK5ldjgkuPqEVLU49jIM\r\nThpqB5RvlqmJO5icwfif7yzS9VHlNPOZgRrm1Ev435avHoT/4OuR2RIN8V/NyDMm\r\n5yV4s3aXZvI70gg9lHVLHQKBgFKjVwBMedK+lzo+/L3BLYh3hVOflvyxiMjXkFlD\r\nXATjeVhpiZuDVOkSkZnM1Vx3kRer1lFuD+2lxJfD90xrIc+TIWVW8aI1lLR3Xz8V\r\narqlQXS5U1Kv26hSXAVBgZVzzcZ5BcAo+6QPmDmWaJf6MUSQKYbeQlaxFvVU1ONK\r\nhKNZAoGBALD079+Lv1owFpJ60Xsnmv5DBPhv8nc3JBmxQECBC3oU9NLAqOZqMJ2D\r\nU8JqhNup/3wJj6I0ekyP3aEfVh0QbegDH/duPHexRYi5qeyEq0FBOY2ja2TcoEFw\r\nl5mfi6vzQoLCd+tCTqQAVwVMGa202QTUeM1hAOg5tgLUfjWkWtsz\r\n-----END RSA PRIVATE KEY-----`\r\n\r\nconst publicKeyuser = `-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxpQPpHiKrzzWdrbgQy/E\r\nYcC6kAnDgTyuc7mGWCM6765HLEpH5XCwD8IS11YTnTNqgUHoykphmgUOWGcHv39z\r\n5FysttLY5x+A+X+hgaM+Tk4I4qLhwp/pCzaGe9zz2DYukU3Ei/eIx+U0DpT4Gv6H\r\nlAhAmheqA9eGtIocLz0cMW9EY4pIzxsN4xrVm7Sd9u2/88UgZ54sef1gDXSpVYN0\r\n1+L8/N1g4XB3PQ7My1CxB8fOUp5I/LpSJwlnfaOqf+unmnyNou4PfAG5lWzy5lFP\r\n2cV0KQtscxTE0vRv5PFPOQsH3Ii9LD6tFH+34Qrz85ncwD/U84RnvRKT8BEM4Xjy\r\n2QIDAQAB\r\n-----END PUBLIC KEY-----`"],"mappings":"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"}