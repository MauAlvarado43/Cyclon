{"version":3,"file":"exportDB.js","names":["require","config","fs","readFile","path","join","__dirname","err","file","cyclones","JSON","parse","forEach","element","index","cyclone","CycloneModel","id","name","realTrajectory","push","position","windSpeed","hurrSpeed","temperature","pressure","date","appearance","lastUpdate","origin","predictedTrajectory","active","category","save","console","log","length","process","exit"],"sources":["../../../src/utils/database/exportDB.js"],"sourcesContent":["require('dotenv').config()\r\nrequire('../../config/database')\r\n\r\nimport mongoose from 'mongoose'\r\nimport { CycloneModel } from '../../models/CycloneModel'\r\n\r\nimport fs from 'fs'\r\nimport path from 'path'\r\n\r\n/* This code was use to export 7370 JSON to MongoDB, then this was use to export the data in a one file */\r\n\r\n// let uniqueJSON = []\r\n\r\n// fs.readdir(path.join(__dirname, \"./hurricanes/\"), (err, directories) => {\r\n\r\n//     directories.forEach(directory => {\r\n        \r\n//         fs.readdir(path.join(__dirname, `./hurricanes/${directory}`), (err, files) => {\r\n\r\n//             files.forEach(async file => {\r\n\r\n//                 let data = JSON.parse(fs.readFileSync(path.join(__dirname, `./hurricanes/${directory}/${file}`), 'utf8'))\r\n                \r\n//                 let cyclone = new CycloneModel()\r\n\r\n//                 cyclone.id = data[0].id\r\n//                 cyclone.name = data[0].name\r\n//                 cyclone.appearance = data[0].realTrajectory[0].date\r\n//                 cyclone.lastUpdate = data[0].lastUpdate\r\n                \r\n//                 cyclone.origin = {\r\n//                     lat: data[0].origin[0].lat,\r\n//                     lng: data[0].origin[0].lng\r\n//                 }\r\n\r\n//                 cyclone.predictedTrajectory = data[0].prediction[0].predictedTrajectory\r\n//                 cyclone.realTrajectory = data[0].realTrajectory\r\n//                 cyclone.active = data[0].isActive\r\n\r\n//                 data[0].realTrajectory.forEach(point => {\r\n//                         if (point.wind < 62){\r\n//                             cyclone.category = \"DT\"\r\n//                         }\r\n//                         else if(point.wind < 118){\r\n//                             cyclone.category = \"TT\"\r\n//                         }\r\n//                         else if(point.wind < 153){\r\n//                             cyclone.category = \"H1\"\r\n//                         }\r\n//                         else if(point.wind < 177){\r\n//                             cyclone.category = \"H2\"\r\n//                         }\r\n//                         else if(point.wind < 210){\r\n//                             cyclone.category = \"H3\"\r\n//                         }\r\n//                         else if(point.wind < 250){\r\n//                             cyclone.category = \"H4\"\r\n//                         }\r\n//                         else{\r\n//                             cyclone.category = \"H5\"\r\n//                         }\r\n//                     }\r\n//                 })\r\n\r\n//                 uniqueJSON.push(cyclone)\r\n\r\n//                 // await cyclone.save()\r\n\r\n//             })\r\n\r\n//             fs.writeFileSync(path.join(__dirname, `./hurricaines.json`),JSON.stringify(uniqueJSON),'utf8')\r\n\r\n//         })\r\n\r\n//     })\r\n\r\n// })\r\n\r\nfs.readFile(path.join(__dirname, `./hurricaines.json`), (err, file) => {\r\n\r\n    let cyclones = JSON.parse(file)\r\n\r\n    cyclones.forEach( async (element, index) => {\r\n\r\n        let cyclone = new CycloneModel()\r\n        \r\n        cyclone.id = element.id\r\n        cyclone.name = element.name\r\n\r\n        element.realTrajectory.forEach(element => {\r\n          \r\n            cyclone.realTrajectory.push({\r\n                position: element.position,\r\n                windSpeed: element.windSpeed,\r\n                hurrSpeed: 0,\r\n                temperature: element.temperature,\r\n                pressure: element.pressure,\r\n                date: element.date\r\n            })\r\n            \r\n        })\r\n\r\n        cyclone.appearance = element.realTrajectory[0].date\r\n        cyclone.lastUpdate = element.lastUpdate\r\n        cyclone.origin = element.origin\r\n        cyclone.predictedTrajectory = []\r\n        cyclone.active = element.active\r\n\r\n        cyclone.category = element.category\r\n        \r\n        await cyclone.save()\r\n\r\n        console.log(`Cyclone #${index} saved`)\r\n\r\n        if(index==cyclones.length-1){\r\n            console.log(\"Process finished\")\r\n            process.exit(0)\r\n        }\r\n\r\n    })\r\n\r\n\r\n})"],"mappings":";;;;AAGA;;AACA;;AAEA;;AACA;;;;+CANA,oJ;;;;;;AADAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACAD,OAAO,CAAC,uBAAD,CAAP;;AAQA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEAE,cAAA,CAAGC,QAAH,CAAYC,gBAAA,CAAKC,IAAL,CAAUC,SAAV,uBAAZ,EAAwD,UAACC,GAAD,EAAMC,IAAN,EAAe;EAEnE,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAf;EAEAC,QAAQ,CAACG,OAAT;IAAA,sEAAkB,iBAAOC,OAAP,EAAgBC,KAAhB;MAAA;MAAA;QAAA;UAAA;YAAA;cAEVC,OAFU,GAEA,IAAIC,0BAAJ,EAFA;cAIdD,OAAO,CAACE,EAAR,GAAaJ,OAAO,CAACI,EAArB;cACAF,OAAO,CAACG,IAAR,GAAeL,OAAO,CAACK,IAAvB;cAEAL,OAAO,CAACM,cAAR,CAAuBP,OAAvB,CAA+B,UAAAC,OAAO,EAAI;gBAEtCE,OAAO,CAACI,cAAR,CAAuBC,IAAvB,CAA4B;kBACxBC,QAAQ,EAAER,OAAO,CAACQ,QADM;kBAExBC,SAAS,EAAET,OAAO,CAACS,SAFK;kBAGxBC,SAAS,EAAE,CAHa;kBAIxBC,WAAW,EAAEX,OAAO,CAACW,WAJG;kBAKxBC,QAAQ,EAAEZ,OAAO,CAACY,QALM;kBAMxBC,IAAI,EAAEb,OAAO,CAACa;gBANU,CAA5B;cASH,CAXD;cAaAX,OAAO,CAACY,UAAR,GAAqBd,OAAO,CAACM,cAAR,CAAuB,CAAvB,EAA0BO,IAA/C;cACAX,OAAO,CAACa,UAAR,GAAqBf,OAAO,CAACe,UAA7B;cACAb,OAAO,CAACc,MAAR,GAAiBhB,OAAO,CAACgB,MAAzB;cACAd,OAAO,CAACe,mBAAR,GAA8B,EAA9B;cACAf,OAAO,CAACgB,MAAR,GAAiBlB,OAAO,CAACkB,MAAzB;cAEAhB,OAAO,CAACiB,QAAR,GAAmBnB,OAAO,CAACmB,QAA3B;cA1Bc;cAAA,OA4BRjB,OAAO,CAACkB,IAAR,EA5BQ;;YAAA;cA8BdC,OAAO,CAACC,GAAR,oBAAwBrB,KAAxB;;cAEA,IAAGA,KAAK,IAAEL,QAAQ,CAAC2B,MAAT,GAAgB,CAA1B,EAA4B;gBACxBF,OAAO,CAACC,GAAR,CAAY,kBAAZ;gBACAE,OAAO,CAACC,IAAR,CAAa,CAAb;cACH;;YAnCa;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAlB;;IAAA;MAAA;IAAA;EAAA;AAwCH,CA5CD"}