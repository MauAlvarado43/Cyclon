{"version":3,"sources":["../../src/utils/logger.js"],"names":["infoLogger","winston","createLogger","level","transports","dailyRotate","timestamp","getDateTime","exitOnError","errorLogger","options","service","logger","version","typeFormat","format","stream","write","message","encoding","info","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","infoLog","errorLog"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,YAAR,CAAqB;AACpCC,WAAO,MAD6B;AAEpCC,gBAAY,CACV,IAAKC,gCAAL,CAAkB;AACd,gBAAQ,aADM;AAEd,iBAAS,MAFK;AAGd,oBAAY,mBAHE;AAId,gBAAQ,IAJM;AAKd,uBAAe,YALD;AAMd,mBAAW,IANG;AAOd,oBAAY,KAPE;AAQd,iBAAS,GARK;AASdC,mBAAY,qBAAW;AACrB,mBAAOC,aAAP;AACD,SAXa;AAYdC,qBAAa;AAZC,KAAlB,CADU;AAFwB,CAArB,CAAnB;;AAoBA,IAAMC,cAAc,2BAAa;AAC7BN,WAAO,OADsB;AAE7BC,gBAAY,CACV,IAAKC,gCAAL,CAAkB;AACd,gBAAQ,YADM;AAEd,iBAAS,OAFK;AAGd,oBAAY,kBAHE;AAId,gBAAQ,IAJM;AAKd,uBAAe,YALD;AAMd,mBAAW,IANG;AAOd,oBAAY,KAPE;AAQd,iBAAS,GARK;AASdC,mBAAY,qBAAW;AACrB,mBAAOC,aAAP;AACD,SAXa;AAYdC,qBAAa;AAZC,KAAlB,CADU;AAFiB,CAAb,CAApB;;AAoBA,IAAME,UAAU;AACZC,aAAS,QADG;AAEZC,YAAQ,wBAFI;AAGZC,aAAS,OAHG;AAIZC,gBAAY;AAJA,CAAhB;;AAOAL,YAAYM,MAAZ,GAAqB,+CAAoBL,OAApB,CAArB;AACAV,WAAWe,MAAX,GAAoB,+CAAoBL,OAApB,CAApB;;AAEAV,WAAWgB,MAAX,GAAoB;AAChBC,WAAO,eAASC,OAAT,EAAkBC,QAAlB,EAA2B;AAChCnB,mBAAWoB,IAAX,CAAgBF,OAAhB;AACD;AAHe,CAApB;;AAMA,SAASX,WAAT,GAAsB;AAClB,QAAIc,cAAc,IAAIC,IAAJ,EAAlB;AACA,QAAIC,WAAWF,YAAYG,OAAZ,KAAwB,GAAxB,IACVH,YAAYI,QAAZ,KAAuB,CADb,IACmB,GADnB,GAEXJ,YAAYK,WAAZ,EAFW,GAEiB,GAFjB,GAGXL,YAAYM,QAAZ,EAHW,GAGc,GAHd,GAIXN,YAAYO,UAAZ,EAJW,GAIgB,GAJhB,GAKXP,YAAYQ,UAAZ,EALJ;AAMA,WAAON,QAAP;AACH;;QAEqBO,O,GAAd9B,U;QAAsC+B,Q,GAAftB,W","file":"logger.js","sourcesContent":["import winston, { createLogger } from 'winston'\r\nimport {configuredFormatter} from 'winston-json-formatter'\r\nimport dailyRotate from 'winston-daily-rotate-file'\r\n\r\nconst infoLogger = winston.createLogger({\r\n    level: 'info',\r\n    transports: [\r\n      new (dailyRotate)({\r\n          'name': 'access-file',\r\n          'level': 'info',\r\n          'filename': './logs/access.log',\r\n          'json': true,\r\n          'datePattern': 'YYYY-MM-DD',\r\n          'prepend': true,\r\n          'maxFiles': '14d',\r\n          \"flags\": \"w\",\r\n          timestamp : function() {\r\n            return getDateTime();        \r\n          },\r\n          exitOnError: false\r\n      })\r\n    ]\r\n})\r\n\r\nconst errorLogger = createLogger({ \r\n    level: 'error',\r\n    transports: [\r\n      new (dailyRotate)({\r\n          'name': 'error-file',\r\n          'level': 'error',\r\n          'filename': './logs/error.log',\r\n          'json': true,\r\n          'datePattern': 'YYYY-MM-DD',\r\n          'prepend': true,\r\n          'maxFiles': '14d',\r\n          \"flags\": \"w\",\r\n          timestamp : function() {\r\n            return getDateTime();        \r\n          },\r\n          exitOnError: false\r\n      })\r\n    ]\r\n})\r\n\r\nconst options = { \r\n    service: 'Cyclon', \r\n    logger: 'Winston-JSON-Formatter',\r\n    version: '1.0.0', \r\n    typeFormat: 'json'\r\n}\r\n\r\nerrorLogger.format = configuredFormatter(options);\r\ninfoLogger.format = configuredFormatter(options);\r\n\r\ninfoLogger.stream = {\r\n    write: function(message, encoding){\r\n      infoLogger.info(message);\r\n    }\r\n}\r\n\r\nfunction getDateTime(){\r\n    var currentdate = new Date(); \r\n    var datetime = currentdate.getDate() + \"/\"\r\n      + (currentdate.getMonth()+1)  + \"/\" \r\n      + currentdate.getFullYear() + \" \"  \r\n      + currentdate.getHours() + \":\"  \r\n      + currentdate.getMinutes() + \":\" \r\n      + currentdate.getSeconds();\r\n    return datetime;  \r\n}\r\n\r\nexport {infoLogger as infoLog, errorLogger as errorLog}"]}