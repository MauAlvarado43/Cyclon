{"version":3,"file":"UserModel.js","names":["Schema","mongoose","UserSchema","name","String","lastName","email","location","lat","lng","password","type","Number","verify","Boolean","register","dateRegister","Date","methods","validateUser","errors","checkWords","push","field","error","length","checkEmail","encryptUser","encryptAES","toString","comparePassword","userPassword","UserModel","model"],"sources":["../../src/models/UserModel.js"],"sourcesContent":["import mongoose from 'mongoose'\r\nimport {encryptAES} from '../utils/cipher'\r\nimport {checkWords, checkEmail} from '../utils/regex'\r\n\r\nconst { Schema } = mongoose\r\n\r\n/**\r\n * Represents an user.\r\n * @constructor\r\n * @property {String} name - The user's name\r\n * @property {String} lastName - The user's last name\r\n * @property {String} email - The user's email\r\n * @property {Number} lat - The user's GPS latitude\r\n * @property {Number} lng - The user's GPS longitude\r\n * @property {String} password - The user's password\r\n * @property {Number} type - The kind of user (0 -> Normal, 1 -> Scientist, 2 -> Administrator)\r\n * @property {Number} register - The kind of register (0 -> Local, 1 -> Facebook, 2 -> Google)\r\n */\r\n\r\nconst UserSchema = new Schema({\r\n    name: String,\r\n    lastName: String,\r\n    email: String,\r\n    location:{\r\n        lat: String,\r\n        lng: String\r\n    },\r\n    password: String,\r\n    type: Number,\r\n    verify: Boolean,\r\n    register: Number,\r\n    dateRegister: Date\r\n})\r\n\r\nUserSchema.methods.validateUser = (name, lastName, email, password, type) => {\r\n\r\n    let errors = []\r\n\r\n    if(!checkWords(name)) errors.push({field:'name', error: 'BAD_FORMAT'})\r\n    if(name.length<0) errors.push({field:'name', error: 'EMPTY_FORMAT'})\r\n    if(name.length>50) errors.push({field:'name', error: 'MAX_LENGTH'})\r\n\r\n    if(!checkWords(lastName)) errors.push({field:'lastName', error: 'ONLY_LETTERS_LASTNAME'})\r\n    if(lastName.length==0) errors.push({field:'lastName', error: 'EMPTY_LASTNAME'})\r\n    if(lastName.length>50) errors.push({field:'lastName', error: 'MAX_LASTNAME'})\r\n\r\n    if(!checkEmail(email)) errors.push({field:'email', error: 'BAD_FORMAT'})\r\n    if(email.length==0) errors.push({field:'email', error: 'EMPTY_FORMAT'})\r\n    if(email.length>50) errors.push({field:'email', error: 'MAX_LENGTH'})\r\n\r\n    if(password.length<8) errors.push({field:'password', error: 'EMPTY_PASSWORD'})\r\n    if(password.length>50) errors.push({field:'password', error: 'MAX_PASSWORD'})\r\n\r\n    return errors\r\n\r\n}\r\n\r\nUserSchema.methods.encryptUser = (email ,lat ,lng ,password) => ({\r\n    email: encryptAES(email),\r\n    lat: encryptAES(lat.toString()),\r\n    lng: encryptAES(lng.toString()),\r\n    password: encryptAES(password)\r\n})\r\n  \r\nUserSchema.methods.comparePassword = (password, userPassword) => (\r\n    userPassword == password\r\n)\r\n\r\nconst UserModel = mongoose.model('User', UserSchema)\r\n\r\nexport {UserModel}"],"mappings":"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"}