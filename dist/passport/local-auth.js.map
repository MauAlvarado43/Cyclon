{"version":3,"file":"local-auth.js","names":["passport","serializeUser","user","done","id","deserializeUser","User","findById","use","LocalStrategy","usernameField","passwordField","passReqToCallback","req","emailCrypted","passwordCrypted","email","decryptFront","password","findOne","encryptAES","newUser","userValidation","validateUser","body","name","lastName","length","geo","geoip","lookup","clientIp","lat","ll","decryptAndroid","lng","userObject","encryptUser","location","type","verify","register","dateRegister","Date","save","comparePassword"],"sources":["../../src/passport/local-auth.js"],"sourcesContent":["  \r\nimport passport from 'passport'\r\nimport {Strategy as LocalStrategy} from 'passport-local'\r\nimport geoip from 'geoip-lite'\r\nimport {UserModel as User} from '../models/UserModel'\r\nimport { encryptAES, decryptFront, decryptAndroid } from '../utils/cipher'\r\n\r\npassport.serializeUser((user, done) => {\r\n  done(null, user.id)\r\n})\r\n\r\npassport.deserializeUser(async (id, done) => {\r\n  const user = await User.findById(id)\r\n  done(null, user)\r\n})\r\n\r\npassport.use('local-signup', new LocalStrategy({\r\n    usernameField: 'email',\r\n    passwordField: 'password',\r\n    passReqToCallback: true\r\n}, async (req, emailCrypted, passwordCrypted, done) => {\r\n\r\n    const email = decryptFront(emailCrypted)\r\n    const password = decryptFront(passwordCrypted)\r\n\r\n    const user = await User.findOne({'email': encryptAES(email)})\r\n\r\n    if(user){\r\n        return done(['EMAIL_TAKEN'], false)\r\n    }\r\n    else{\r\n\r\n        const newUser = new User()\r\n        const userValidation = newUser.validateUser(decryptFront(req.body.name), decryptFront(req.body.lastName), email, password)\r\n\r\n        if(userValidation.length==0){\r\n\r\n            let geo = geoip.lookup(req.clientIp)\r\n\r\n            if(!geo && req.body.lat) geo = { ll: [decryptAndroid(req.body.lat), decryptAndroid(req.body.lng)] }\r\n            else geo = {ll: [19, -99]}\r\n\r\n            if(geo){\r\n\r\n                let userObject = newUser.encryptUser(\r\n                    email,\r\n                    geo.ll[0],\r\n                    geo.ll[1],\r\n                    password\r\n                )\r\n            \r\n                newUser.name = decryptFront(req.body.name)\r\n                newUser.lastName = decryptFront(req.body.lastName)\r\n                newUser.email = userObject.email\r\n                newUser.location.lat = userObject.lat\r\n                newUser.location.lng = userObject.lng\r\n                newUser.password = userObject.password\r\n                newUser.type = 0\r\n                newUser.verify = false\r\n                newUser.register = 0\r\n                newUser.dateRegister = new Date()\r\n            \r\n                await newUser.save()\r\n                done(null, newUser)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn done(['BAD_LOCATION'], false)\r\n            }     \t\r\n            \r\n        }\r\n        else{\r\n            return done(userValidation, false)\r\n        }\r\n        \r\n    }\r\n}))\r\n\r\npassport.use('local-signin', new LocalStrategy({\r\n    usernameField: 'email',\r\n    passwordField: 'password',\r\n    passReqToCallback: true\r\n}, async (req, email, password, done) => {\r\n\r\n    const user = await User.findOne({email: encryptAES(decryptFront(email))})\r\n\r\n    if(!user){\r\n        return done(['USER_NOT_EXIST'], false)\r\n    }\r\n    \r\n    if(!user.comparePassword(encryptAES(decryptFront(password)), user.password)) {\r\n        return done(['INCORRECT_PASSWORD'], false)\r\n    }\r\n\r\n    return done(null, user)\r\n\r\n}))"],"mappings":"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"}