{"version":3,"sources":["../../src/passport/google-auth.js"],"names":["passport","use","GoogleStrategy","clientID","clientSecret","callbackURL","passReqToCallback","req","accessToken","refreshToken","profile","done","User","find","email","emails","value","err","docs","console","log","ip","length","newUser","geo","geoip","lookup","ll","userObject","encryptUser","id","name","givenName","lastName","familyName","lat","lng","password","type"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;AAEAA,mBAASC,GAAT,CAAa,aAAb,EAA2B,IAAIC,mCAAJ,CAAmB;AACtCC,cAAU,0EAD4B;AAEtCC,kBAAc,0BAFwB;AAGtCC,iBAAa,4CAHyB;AAItCC,uBAAmB;AAJmB,CAAnB;AAAA,uEAKpB,iBAAOC,GAAP,EAAYC,WAAZ,EAAyBC,YAAzB,EAAuCC,OAAvC,EAAgDC,IAAhD;AAAA;AAAA;AAAA;AAAA;;AAECC,6CAAKC,IAAL,CAAU,EAACC,OAAOJ,QAAQK,MAAR,CAAe,CAAf,EAAkBC,KAA1B,EAAV,EAA4C,UAACC,GAAD,EAAKC,IAAL,EAAc;;AAEtDC,oCAAQC,GAAR,CAAYF,IAAZ;;AAEAC,oCAAQC,GAAR,CAAYb,IAAIc,EAAhB;;AAEA,gCAAGH,KAAKI,MAAL,IAAa,CAAhB,EAAkB;AACd,oCAAMC,UAAU,IAAIX,oBAAJ,EAAhB;;AAEA,oCAAIY,MAAMC,oBAAMC,MAAN,CAAanB,IAAIc,EAAjB,CAAV;;AAEAF,wCAAQC,GAAR,CAAYI,IAAIG,EAAhB;;AAEA,oCAAGH,GAAH,EAAO;;AAEH,wCAAII,aAAaL,QAAQM,WAAR,CACbnB,QAAQK,MAAR,CAAe,CAAf,EAAkBC,KADL,EAEbQ,IAAIG,EAAJ,CAAO,CAAP,CAFa,EAGbH,IAAIG,EAAJ,CAAO,CAAP,CAHa,EAIbjB,QAAQoB,EAJK,CAAjB;;AAOAP,4CAAQQ,IAAR,GAAerB,QAAQqB,IAAR,CAAaC,SAA5B;AACAT,4CAAQU,QAAR,GAAmBvB,QAAQqB,IAAR,CAAaG,UAAhC;AACAX,4CAAQT,KAAR,GAAgBc,WAAWd,KAA3B;AACAS,4CAAQY,GAAR,GAAcP,WAAWO,GAAzB;AACAZ,4CAAQa,GAAR,GAAcR,WAAWQ,GAAzB;AACAb,4CAAQc,QAAR,GAAmBT,WAAWS,QAA9B;AACAd,4CAAQe,IAAR,GAAe,CAAf;;AAEAnB,4CAAQC,GAAR,CAAYG,OAAZ;;AAEA;AACAZ,yCAAK,IAAL,EAAWY,OAAX;AACH,iCArBD,MAsBI;AACA,2CAAOZ,KAAK,CAAC,cAAD,CAAL,EAAuB,KAAvB,CAAP;AACH;AAEJ,6BAjCD,MAkCI;AACAA,qCAAK,IAAL,EAAWO,KAAK,CAAL,CAAX;AACH;AAEJ,yBA5CD;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALoB;;AAAA;AAAA;AAAA;AAAA,IAA3B","file":"google-auth.js","sourcesContent":["import passport from 'passport'\r\nimport {OAuth2Strategy as GoogleStrategy} from 'passport-google-oauth'\r\nimport {UserModel as User} from '../models/UserModel'\r\nimport geoip from 'geoip-lite'\r\n\r\npassport.use('google-auth',new GoogleStrategy({\r\n        clientID: \"155001320669-kd32n0gk5u8le64bbmtie7d2ebvfujot.apps.googleusercontent.com\",\r\n        clientSecret: \"KAOYHF3jiEHKco7qDSGQ5frg\",\r\n        callbackURL: \"http://localhost:3000/auth/google/callback\",\r\n        passReqToCallback: true\r\n    }, async (req, accessToken, refreshToken, profile, done) => {\r\n\r\n        User.find({email: profile.emails[0].value}, (err,docs) => {\r\n\r\n            console.log(docs)\r\n\r\n            console.log(req.ip)\r\n\r\n            if(docs.length==0){\r\n                const newUser = new User()\r\n\r\n                let geo = geoip.lookup(req.ip)\r\n\r\n                console.log(geo.ll)\r\n\r\n                if(geo){\r\n                    \r\n                    let userObject = newUser.encryptUser(\r\n                        profile.emails[0].value,\r\n                        geo.ll[0],\r\n                        geo.ll[1],\r\n                        profile.id\r\n                    )\r\n                \r\n                    newUser.name = profile.name.givenName\r\n                    newUser.lastName = profile.name.familyName\r\n                    newUser.email = userObject.email\r\n                    newUser.lat = userObject.lat\r\n                    newUser.lng = userObject.lng\r\n                    newUser.password = userObject.password\r\n                    newUser.type = 0\r\n\r\n                    console.log(newUser)\r\n                \r\n                    //newUser.save()\r\n                    done(null, newUser)\r\n                }\r\n                else{\r\n                    return done([\"BAD_LOCATION\"], false)\r\n                }  \r\n\r\n            }\r\n            else{\r\n                done(null, docs[0])\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n))"]}