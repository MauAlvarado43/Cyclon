{"version":3,"sources":["../src/server.js"],"names":["app","server","http","createServer","store","session","corsOptions","origin","require","use","name","secret","resave","saveUninitialized","expires","set","process","env","PORT","bodyParser","urlencoded","extended","json","passport","initialize","infoLog","stream","express","static","path","join","__dirname","listen","get","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAf;AACA,IAAMI,QAAQ,kCAAYC,wBAAZ,CAAd;AACA,IAAMC,cAAc;AAChBC,YAAQ;AADQ,CAApB;;AAIAC,QAAQ,mBAAR;AACAA,QAAQ,uBAAR;AACAA,QAAQ,wBAAR;AACAA,QAAQ,0BAAR;;AAEA;AACAR,IAAIS,GAAJ,CAAQ,8BAAQ;AACZC,UAAM,UADM;AAEZC,YAAQ,QAFI;AAGZC,YAAQ,IAHI;AAIZC,uBAAmB,IAJP;AAKZT,WAAO,IAAIA,KAAJ,CAAU;AACbU,iBAAS,KAAK,EAAL,GAAU;AADN,KAAV;AALK,CAAR,CAAR;;AAUA;AACAd,IAAIe,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAlB,IAAIS,GAAJ,CAAQ,uBAAR;AACAT,IAAIS,GAAJ,CAAQ,4BAAR;AACAT,IAAIS,GAAJ,CAAQU,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACArB,IAAIS,GAAJ,CAAQU,qBAAWG,IAAX,EAAR;AACAtB,IAAIS,GAAJ,CAAQ,4BAAa,QAAb,CAAR;AACAT,IAAIS,GAAJ,CAAQc,mBAASC,UAAT,EAAR;AACAxB,IAAIS,GAAJ,CAAQc,mBAASlB,OAAT,EAAR;AACAL,IAAIS,GAAJ,CAAQ,sBAAO,UAAP,EAAmB,EAAE,UAAUgB,gBAAQC,MAApB,EAAnB,CAAR;AACA1B,IAAIS,GAAJ,CAAQ,oBAAKH,WAAL,CAAR;AACAN,IAAIS,GAAJ,CAAQkB,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACA/B,IAAIS,GAAJ,CAAQ,6BAAR;AACAT,IAAIe,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAf,IAAIe,GAAJ,CAAQ,OAAR,EAAgB,WAAhB;;AAEA;AACAf,IAAIS,GAAJ,CAAQD,QAAQ,qBAAR,CAAR;;AAEA;AACAP,OAAO+B,MAAP,CAAchC,IAAIiC,GAAJ,CAAQ,MAAR,CAAd,EAA8B,SAA9B,EAAyC,YAAM;AAC3CC,YAAQC,GAAR,CAAY,gBAAZ,EAA8BnC,IAAIiC,GAAJ,CAAQ,MAAR,CAA9B;AACH,CAFD;;kBAIehC,M","file":"server.js","sourcesContent":["import express from 'express'\r\nimport http from 'http'\r\nimport compression from 'compression'\r\nimport session from 'express-session'\r\nimport helmet from 'helmet'\r\nimport bodyParser from 'body-parser'\r\nimport cookieParser from 'cookie-parser'\r\nimport memoryStore from 'session-memory-store'\r\nimport cors from 'cors'\r\nimport passport from 'passport'\r\nimport morgan from 'morgan'\r\nimport flash from 'connect-flash'\r\nimport path from 'path'\r\nimport {errorLog, infoLog} from './utils/logger'\r\n\r\n// Initialzing packages\r\nconst app = express()\r\nconst server = http.createServer(app)\r\nconst store = memoryStore(session)\r\nconst corsOptions = {\r\n    origin: '*'\r\n}\r\n\r\nrequire(\"./config/database\")\r\nrequire('./passport/local-auth')\r\nrequire('./passport/google-auth')\r\nrequire('./passport/facebook-auth')\r\n\r\n// Middlewares\r\napp.use(session({\r\n    name: 'JSESSION',\r\n    secret: 'secret',\r\n    resave: true,\r\n    saveUninitialized: true,\r\n    store: new store({\r\n        expires: 60 * 60 * 12\r\n    })\r\n}))\r\n\r\n// Settings\r\napp.set('port', process.env.PORT || 3000)\r\napp.use(helmet())\r\napp.use(compression())\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(bodyParser.json())\r\napp.use(cookieParser('secret'))\r\napp.use(passport.initialize())\r\napp.use(passport.session())\r\napp.use(morgan(\"combined\", { \"stream\": infoLog.stream }))\r\napp.use(cors(corsOptions))\r\napp.use(express.static(path.join(__dirname, 'public')))\r\napp.use(flash())\r\napp.set('view engine','ejs');\r\napp.set('views','src/views');\r\n\r\n//Routes\r\napp.use(require('./routes/unregister'))\r\n\r\n// Start the server\r\nserver.listen(app.get('port'),\"0.0.0.0\", () => {\r\n    console.log('Server on port', app.get('port'))\r\n})\r\n\r\nexport default server"]}