type User{
	name: String
	lastName: String
	email: String
	location: CryptedGeolocation
	password: String
	type: Int
	verify: Boolean
	register: Int
}

type Cyclone{
	id: String
	name: String
	appearance: String
	lastUpdate: String
	origin: Geolocation
	predictedTrajectory: [Trajectory]
	realTrajectory: [Trajectory]
	active: Boolean
	category: String
}

type RiskArea{
	position: Geolocation
	ocean: String
	date:  String
}

type Trajectory{
   position: Geolocation
	windSpeed: Float
	hurrSpeed: Float
	temperature: Float
	pressure: Float
	date: String
}

type Geolocation{
	lat: Float
	lng: Float
}

type CryptedGeolocation{
	lat: String
	lng: String
}

type CountUser{
	count: Int
}

type Graph {
	date: String,
	count: Int
}

type GraphUserType {
	normal: [Graph]
	scientist: [Graph]
}

type GraphUserRegister {
	facebook : [Graph]
	google : [Graph]
	local : [Graph]
}

type GraphUserVerified {
	verified: [Graph]
	unverified: [Graph]
}

type Query {
    activeCyclones: [Cyclone]
	searchCyclone (year: Int): [Cyclone]
	pageUser (page: Int, type: Int): [User]
	countUser (type: Int): CountUser
	getGraphUserType: GraphUserType
	getGraphUserRegister: GraphUserRegister
	getGraphUserVerified: GraphUserVerified
	searchUser (email: String): [User]
}